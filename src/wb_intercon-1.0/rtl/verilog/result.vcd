$date
	Tue Sep 13 12:22:33 2016
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module wb_snoop_arbiter_tb $end
$var wire 1 ! s_we_o $end
$var wire 1 " s_stb_o $end
$var wire 4 # s_sel_o [3:0] $end
$var wire 32 $ s_dat_o [31:0] $end
$var wire 1 % s_cyc_o $end
$var wire 3 & s_cti_o [2:0] $end
$var wire 2 ' s_bte_o [1:0] $end
$var wire 32 ( s_adr_o [31:0] $end
$var wire 1 ) op_type_o $end
$var wire 128 * op_adr_o [127:0] $end
$var wire 4 + m_rty_o [3:0] $end
$var wire 4 , m_err_o [3:0] $end
$var wire 128 - m_dat_o [127:0] $end
$var wire 4 . m_ack_o [3:0] $end
$var reg 1 / clk $end
$var reg 128 0 m_adr_i [127:0] $end
$var reg 8 1 m_bte_i [7:0] $end
$var reg 12 2 m_cti_i [11:0] $end
$var reg 4 3 m_cyc_i [3:0] $end
$var reg 128 4 m_dat_i [127:0] $end
$var reg 16 5 m_sel_i [15:0] $end
$var reg 4 6 m_stb_i [3:0] $end
$var reg 4 7 m_we_i [3:0] $end
$var reg 4 8 op_ack_i [3:0] $end
$var reg 4 9 op_valid_dat_i [3:0] $end
$var reg 128 : oped_dat_i [127:0] $end
$var reg 1 ; rst $end
$var reg 1 < s_ack_i $end
$var reg 32 = s_dat_i [31:0] $end
$var reg 1 > s_err_i $end
$var reg 1 ? s_rty_i $end
$scope module uut $end
$var wire 4 @ snoop_ack_i [3:0] $end
$var wire 128 A snoop_dat_i [127:0] $end
$var wire 4 B snoop_hit_i [3:0] $end
$var wire 1 ) snoop_type_o $end
$var wire 1 / wb_clk_i $end
$var wire 1 ; wb_rst_i $end
$var wire 256 C wbm_adr_i [255:0] $end
$var wire 16 D wbm_bte_i [15:0] $end
$var wire 24 E wbm_cti_i [23:0] $end
$var wire 8 F wbm_cyc_i [7:0] $end
$var wire 256 G wbm_dat_i [255:0] $end
$var wire 32 H wbm_sel_i [31:0] $end
$var wire 8 I wbm_stb_i [7:0] $end
$var wire 8 J wbm_we_i [7:0] $end
$var wire 1 < wbs_ack_i $end
$var wire 1 % wbs_cyc_o $end
$var wire 32 K wbs_dat_i [31:0] $end
$var wire 1 > wbs_err_i $end
$var wire 1 ? wbs_rty_i $end
$var wire 1 ! wbs_we_o $end
$var wire 1 " wbs_stb_o $end
$var wire 4 L wbs_sel_o [3:0] $end
$var wire 32 M wbs_dat_o [31:0] $end
$var wire 3 N wbs_cti_o [2:0] $end
$var wire 2 O wbs_bte_o [1:0] $end
$var wire 32 P wbs_adr_o [31:0] $end
$var wire 8 Q wbm_rty_o [7:0] $end
$var wire 8 R wbm_err_o [7:0] $end
$var wire 256 S wbm_dat_o [255:0] $end
$var wire 8 T wbm_ack_o [7:0] $end
$var wire 1 U snoop_type $end
$var wire 128 V snoop_adr_o [127:0] $end
$var wire 3 W master_sel [2:0] $end
$var wire 1 X end_of_transaction $end
$var wire 1 Y active $end
$var reg 8 Z arbiter_cyc [7:0] $end
$var reg 4 [ next_state [3:0] $end
$var reg 2 \ poll_response_flag [1:0] $end
$var reg 3 ] saved_master_sel [2:0] $end
$var reg 8 ^ saved_request [7:0] $end
$var reg 32 _ snoop_adr_reg [31:0] $end
$var reg 32 ` snooped_dat [31:0] $end
$var reg 4 a state [3:0] $end
$scope function clog2 $end
$var integer 32 b clog2 [31:0] $end
$var integer 32 c in [31:0] $end
$upscope $end
$scope function ff1 $end
$var integer 32 d ff1 [31:0] $end
$var integer 32 e i [31:0] $end
$var integer 32 f in [31:0] $end
$var integer 32 g width [31:0] $end
$upscope $end
$scope function fl1 $end
$var integer 32 h fl1 [31:0] $end
$var integer 32 i i [31:0] $end
$var integer 32 j in [31:0] $end
$var integer 32 k width [31:0] $end
$upscope $end
$scope function reverse_bits $end
$var integer 32 l i [31:0] $end
$var integer 32 m in [31:0] $end
$var integer 32 n reverse_bits [31:0] $end
$var integer 32 o width [31:0] $end
$upscope $end
$scope function reverse_bytes $end
$var integer 32 p i [31:0] $end
$var integer 32 q in [31:0] $end
$var integer 32 r reverse_bytes [31:0] $end
$var integer 32 s width [31:0] $end
$upscope $end
$scope module arbiter0 $end
$var wire 1 / clk $end
$var wire 8 t request [7:0] $end
$var wire 1 ; rst $end
$var wire 16 u token_wrap [15:0] $end
$var wire 8 v order [7:0] $end
$var wire 1 w next $end
$var reg 1 Y active $end
$var reg 8 x grant [7:0] $end
$var reg 3 y select [2:0] $end
$var reg 8 z token [7:0] $end
$var integer 32 { yy [31:0] $end
$scope function ff1 $end
$var reg 3 | ff1 [2:0] $end
$var reg 8 } in [7:0] $end
$var integer 32 ~ i [31:0] $end
$upscope $end
$scope begin ORDER_[0] $end
$upscope $end
$scope begin ORDER_[1] $end
$upscope $end
$scope begin ORDER_[2] $end
$upscope $end
$scope begin ORDER_[3] $end
$upscope $end
$scope begin ORDER_[4] $end
$upscope $end
$scope begin ORDER_[5] $end
$upscope $end
$scope begin ORDER_[6] $end
$upscope $end
$scope begin ORDER_[7] $end
$upscope $end
$scope begin TOKEN_ $end
$upscope $end
$upscope $end
$scope begin fsm_sensitivity_block $end
$upscope $end
$scope begin snoop_read_active $end
$var integer 32 !" k [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
bx x
1w
b0 v
bx u
b0 t
bx s
bx r
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
bx i
bx h
bx g
bx f
bx e
bx d
bx c
bx b
bx a
b0 `
b0 _
b0 ^
b0 ]
b10 \
bx [
b0 Z
xY
xX
bx W
b0 V
xU
bx T
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx S
bx R
bx Q
bx P
bx O
bx N
bx M
bx L
bx K
b0 J
b0xxxx I
b0xxxxxxxxxxxxxxxx H
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx G
b0 F
b0xxxxxxxxxxxx E
b0xxxxxxxx D
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C
b0 B
bx A
b0 @
x?
x>
bx =
x<
1;
bx :
b0 9
b0 8
b0 7
bx 6
bx 5
bx 4
b0 3
bx 2
bx 1
bx 0
0/
bx .
bx -
bx ,
bx +
b0 *
x)
bx (
bx '
bx &
x%
bx $
bx #
x"
x!
$end
#100
b0 .
b0 +
b0 ,
b0 T
0%
b0 x
b0 Q
b0 R
0!
b0 W
b0 y
0Y
b100000001 u
b1 z
0X
0)
0U
b11111111111111111111111111111111 ~
b0 |
b0 }
b1 a
b1 [
1/
#200
0/
#300
b11111111111111111111111111111111 ~
1/
#400
0/
#500
b0x .
b0x +
b0x ,
b0x T
b0x Q
b0x R
1%
b1 x
1Y
0w
b11100001 v
b11111111111111111111111111111111 ~
b1 }
b1000 {
b1111 Z
b1111 t
1/
b1111 F
b1111 3
0;
#600
0/
#700
b100 [
b11111111111111111111111111111111 ~
1/
#800
0/
#900
1w
b0 v
b100 !"
b1111 ^
bx *
bx V
bx _
b0 Z
b0 t
1)
1U
b11111111111111111111111111111111 ~
b100 a
1/
#1000
0/
#1100
b0 .
b0 +
b0 ,
b0 T
b0 Q
b0 R
0%
0Y
b0 x
b11111111111111111111111111111111 ~
b0 }
b1000 {
1/
#1200
0/
#1300
b11111111111111111111111111111111 ~
b1000 {
1/
#1400
0/
#1500
b11111111111111111111111111111111 ~
b1000 {
b100 !"
1/
b1 8
b1 @
#1600
0/
#1700
b11111111111111111111111111111111 ~
b1000 {
1/
#1800
0/
#1900
b11111111111111111111111111111111 ~
b1000 {
1/
#2000
b0 \
b100 !"
0/
b1111 8
b1111 @
#2100
b11111111111111111111111111111111 ~
b1000 [
b1000 {
1/
#2200
0/
#2300
b10 \
b0 ^
b0 *
b0 V
b0 _
b0 Z
b0 t
0)
0U
b1000 a
b11111111111111111111111111111111 ~
b1000 {
1/
#2400
0/
#2500
b11111111111111111111111111111111 ~
b1000 {
1/
#2600
0/
#2700
b11111111111111111111111111111111 ~
b1000 {
1/
#2800
0/
#2900
b11111111111111111111111111111111 ~
b1000 {
1/
#3000
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 -
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 S
0/
b1 =
b1 K
1<
#3100
b11111111111111111111111111111111 ~
b1000 {
1/
#3200
0/
#3300
b11111111111111111111111111111111 ~
b1000 {
1/
#3400
0/
#3500
1X
b0 -
b11111111111111111111111111111111 ~
b1000 {
b0 S
b0 Z
b0 t
1/
0<
b0 =
b0 K
b1110 F
b1110 3
#3600
0/
#3700
b11111111111111111111111111111111 ~
b1 [
b1000 {
1/
#3800
0/
#3900
0X
b11100000 v
b1110 Z
b1110 t
b1 a
b11111111111111111111111111111111 ~
b1000 {
1/
#4000
0/
1;
#4100
b11111111111111111111111111111111 ~
1/
#4200
0/
#4300
b11111111111111111111111111111111 ~
1/
#4400
0/
#4500
b11111111111111111111111111111111 ~
1/
#4600
0/
#4700
b11111111111111111111111111111111 ~
1/
#4800
0/
#4900
b11111111111111111111111111111111 ~
1/
#5000
0/
#5100
b11111111111111111111111111111111 ~
1/
#5200
0/
#5300
b11111111111111111111111111111111 ~
1/
#5400
0/
#5500
b11000001 v
0w
b1000000010 u
b10 z
b1000 {
b11111111111111111111111111111111 ~
1/
0;
#5600
0/
#5700
b0x0 +
b0x0 ,
b0x0 Q
b0x0 R
1%
b10 x
b1 W
b1 y
1Y
b1 |
b11111111111111111111111111111111 ~
b10 }
1/
#5800
0/
#5900
b100 [
b11111111111111111111111111111111 ~
b1 |
1/
#6000
0/
#6100
0X
1w
b0 v
b0 \
b100 !"
b1110 ^
b1 ]
bx *
bx V
bx _
b0 Z
b0 t
1)
1U
b11111111111111111111111111111111 ~
b1 |
b100 a
1/
#6200
0/
#6300
1X
b0 +
b0 ,
0%
b1110 ^
b0 ]
bx *
bx V
bx _
b0 Z
b0 t
0Y
b0 Q
b0 R
b0 W
b0 y
b0 x
b1000 {
b1000 [
b11111111111111111111111111111111 ~
b0 |
b0 }
1/
#6400
0/
#6500
b0 -
b0 .
b0 ^
b0 *
b0 V
b0 _
b0 Z
b0 t
0)
0U
b0 S
b0 T
b11111111111111111111111111111111 ~
b1 [
b1000 a
b1000 {
b0 `
b100 !"
b10 \
1/
b1000000 :
b1000000 A
b1 9
b1 B
b1 8
b1 @
#6600
0/
#6700
0X
0w
b11000001 v
b1110 Z
b1110 t
b1 a
b11111111111111111111111111111111 ~
b1000 {
1/
#6800
0/
#6900
b0x0 +
b0x0 ,
b0x0 Q
b0x0 R
1%
b10 x
b1 W
b1 y
1Y
b1 |
b11111111111111111111111111111111 ~
b10 }
1/
#7000
0/
#7100
b100 [
b11111111111111111111111111111111 ~
b1 |
1/
#7200
0/
#7300
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000 -
b10 .
0X
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001000000 S
b10 T
1w
b0 v
b1000000 `
b11 \
b100 !"
b1110 ^
b1 ]
bx *
bx V
bx _
b0 Z
b0 t
1)
1U
b11111111111111111111111111111111 ~
b1 |
b100 a
1/
#7400
0/
#7500
b1 .
b1 T
b0 +
b0 ,
0Y
b0 Q
b0 R
b0 W
b0 y
b0 x
1X
b1000 {
b11111111111111111111111111111111 ~
b0 |
b0 }
b1100 ^
b0 ]
bx *
bx V
bx _
b0 Z
b0 t
0%
1/
b1100 F
b1100 3
#7600
0/
#7700
b11111111111111111111111111111111 ~
b1 [
b1000 {
1/
#7800
0/
#7900
b0 .
b0 -
0X
b0 T
b0 S
b11000000 v
b10 \
b0 `
b0 ^
b0 *
b0 V
b0 _
b1100 Z
b1100 t
0)
0U
b1 a
b11111111111111111111111111111111 ~
b1000 {
1/
#8000
0/
1;
#8100
b1100000 v
b100000001 u
b1 z
b11111111111111111111111111111111 ~
1/
#8200
0/
#8300
b11111111111111111111111111111111 ~
1/
#8400
0/
#8500
b11111111111111111111111111111111 ~
1/
#8600
0/
#8700
b11111111111111111111111111111111 ~
1/
#8800
0/
#8900
b11111111111111111111111111111111 ~
1/
#9000
0/
#9100
b11111111111111111111111111111111 ~
1/
#9200
0/
#9300
b11111111111111111111111111111111 ~
1/
#9400
0/
#9500
b10000001 v
0w
b10000000100 u
b100 z
b1000 {
b11111111111111111111111111111111 ~
1/
b0xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx00000000000000000000000000110111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx G
bx00000000000000000000000000110111xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 4
b100 J
b100 7
0;
#9600
0/
#9700
b0x00 +
b0x00 ,
b0x00 Q
b0x00 R
1%
b100 x
1!
b110111 $
b110111 M
b10 W
b10 y
1Y
b10 |
b11111111111111111111111111111111 ~
b100 }
1/
#9800
0/
#9900
b11111111111111111111111111111111 ~
b10 |
1/
#10000
b100 .
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 -
b100 T
b1000000000000000000000000000000010000000000000000000000000000000100000000000000000000000000000001 S
0/
b1 =
b1 K
1<
#10100
b11111111111111111111111111111111 ~
b10 |
1/
#10200
0/
#10300
b11111111111111111111111111111111 ~
b10 |
1/
#10400
0/
#10500
b0 +
b0 ,
b0 x
b0 Q
b0 R
0!
bx $
bx M
b0 W
b0 y
0Y
b0 .
b0 T
b0 -
1w
b10000000 v
b11111111111111111111111111111111 ~
b0 |
b0 }
b0 S
b1000 Z
b1000 t
0%
1/
0<
b0 =
b0 K
b1000 F
b1000 3
#10600
0/
#10700
b1 v
0w
b100000001000 u
b1000 z
b1000 {
b11111111111111111111111111111111 ~
1/
#10800
0/
#10900
bx000 +
bx000 ,
b0x000 Q
b0x000 R
1%
b1000 x
b11 W
b11 y
1Y
b11 |
b11111111111111111111111111111111 ~
b1000 }
1/
#11000
0/
1;
#11100
b100000 v
1w
b100000001 u
b1 z
b100 [
b11111111111111111111111111111111 ~
b11 |
1/
#11200
0/
#11300
b0 +
b0 ,
0%
b0 x
b0 Q
b0 R
b0 W
b0 y
0Y
b11111111111111111111111111111111 ~
b0 |
b0 }
b100 [
1/
#11400
0/
#11500
b1 [
b11111111111111111111111111111111 ~
1/
#11600
0/
#11700
b11111111111111111111111111111111 ~
1/
#11800
0/
#11900
b11111111111111111111111111111111 ~
1/
#12000
0/
